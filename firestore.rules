rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Restrict sermons collection to owner only
    match /sermons/{sermonId} {
      allow read, write: if request.auth != null && resource.data.userID == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userID == request.auth.uid;
    }
    // Restrict userScriptureVersions collection to owner only
    match /userScriptureVersions/{versionId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    // Restrict userScriptures collection to owner only
    match /userScriptures/{scriptureId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    // Restrict userTags collection to owner only
    match /userTags/{tagId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    // Restrict sermonFolders collection to owner only
    match /sermonFolders/{folderId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    // Allow read to anyone for other collections (or restrict as needed)
    match /{document=**} {
      allow read: if true;
      // Allow write only if user is authenticated and their email matches yours
      allow write: if request.auth != null && request.auth.token.email == "steven.hanson.02@gmail.com";
    }
  }
}